#include <stdio.h>
#include <stdlib.h>

struct frame {
   int info;
   int seq;
}p;

int ak = 0;
int t = 5;
char turn = 's';
int errorframe = 1;
int errorack = 1;
int disconnect = 0;
void sender();
void receiver();

void sender() {
   static int flag = 0;
  
   if (turn == 's') {
      if (errorack == 0)
         printf("SENDER: Resent packet with seq NO: %d\n", p.seq);
      else{
         if (flag == 1)
         printf("SENDER: Received ACK for packet %d\n", ak);
        
         if (p.seq == 5) {
         disconnect = 1;
         return;
         }
        
         p.info++;
         p.seq++;
         printf("SENDER: Sent packet with seq NO: %d\n", p.seq);
         flag = 1;
      }
      turn = 'r';
      errorframe = rand() % 4;
      if (errorframe == 0)
         printf("Error while sending Packet\n");
   }
   else {
      t--;
      printf("SENDER: Time reducing\n");
      if (t == 0) {
      turn = 's';
       errorack = 0;
       t = 5;
      }
   }
}

void receiver() {
   static int expected_seq = 1;
  
   if (turn == 'r') {
       if (errorframe != 0) {
           if (p.seq == expected_seq){
               printf("RECEIVER: Received packet with seq %d\n\n", p.seq);
               expected_seq++;
           }
           else
               printf("RECEIVER: Duplicated packet with seq %d\n\n", expected_seq - 1);
          
           ak = p.seq;
           turn = 's';
           errorack = rand() % 4;
           if (errorack == 0)
               printf("Error while sending ACK\n\n");
       }
   }
}

int main() {
     p.info = 0;
     p.seq = 0;
    
     while (!disconnect) {
         sender();
         for (int k = 1; k <= 10000000; k++);
         receiver();
     }
     return 0;
}
