#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<sys/socket.h>
#include<arpa/inet.h>

#define MAX 80
#define PORT 8080
#define SERVER_ADDRESS "127.0.0.1"
#define SA struct sockaddr

void func(int client_socket){
 char buff[MAX];
 int n;
 for(;;){
   bzero(buff, MAX);
   n = 0;
   printf("To server:");
   while((buff[n++] = getchar()) != '\n');
   write(client_socket, buff, MAX);
   if( strncmp(buff, "exit", 4) == 0 ){
   printf("Server exiting...");
   break;
   }

   bzero(buff, MAX);
   read(client_socket, buff, MAX);
   printf("From server: %s\n", buff);
   if( strncmp(buff, "exit", 4) == 0 ){
   printf("Server exiting...\n");
   break;
   }
 }
}

int main() {
 int client_socket;
 struct sockaddr_in server_address;

 client_socket = socket(AF_INET, SOCK_STREAM, 0);
 if (client_socket == -1) {
   printf("Socket creation failed!!!\n");
   exit(0);
 }
 printf("Socket created...\n");

 bzero(&server_address, sizeof(server_address));
 server_address.sin_family = AF_INET;
 server_address.sin_addr.s_addr = inet_addr(SERVER_ADDRESS);
 server_address.sin_port = htons(PORT);

 if (connect(client_socket, (SA *)&server_address, sizeof(server_address)) != 0) {
   printf("Connection failed!!!\n");
   exit(0);
 }
 printf("Socket connected...\n");

 func(client_socket);
 close(client_socket);
 return 0;
}
